# This Source Code Form is licensed MPL-2.0: http://mozilla.org/MPL/2.0

# == Distribution preparation ==
FROM ubuntu:20.04
ENV DEBIAN_FRONTEND noninteractive

# Use BASH(1) as shell, affects the RUN commands below
RUN ln -sf bash /bin/sh && ls -al /bin/sh

# Upgrade packages, clean up to shrink Docker image
RUN : \
  && apt-get update \
  && apt-get -y upgrade \
  && apt-get clean

# Install build tools, libstdc++-10-dev>=10 for C++20
# Add libXss.so, libgtk-3-0 for Electron
# Add necessary dependencies for LV2 support
# Install recent pandoc and filters
# Install Poxy, needs Doxygen and TeX
# Install X11 recording tools
RUN : \
  && apt-get install -y \
	     sudo build-essential gawk zstd unzip git wget curl \
	     gnupg lsb-release software-properties-common ca-certificates \
	     gettext graphviz imagemagick librsvg2-bin libxml2-utils \
	     ccache cmake universal-ctags cppcheck libstdc++-10-dev \
	     pkg-config libxml2-dev libglib2.0-dev \
	     libboost-system-dev libzstd-dev libasound2-dev libjack-dev \
	     libflac-dev libopus-dev libvorbis-dev libmpg123-dev libmp3lame-dev \
	     libgconf-2-4 libgtk2.0-dev libgtk-3-dev libgtk-3-0 \
	     squashfs-tools libxss1 libgbm1 libnss3 \
  && apt-get install -y \
	     libsuil-dev lv2-dev ninja-build \
  && apt-get install -y \
	     python3 python3-pip python3-lxml python3-pandocfilters \
  && curl -fsSLO https://github.com/jgm/pandoc/releases/download/3.1.9/pandoc-3.1.9-1-amd64.deb \
  && apt-get install -y ./pandoc-3.1.9-1-amd64.deb \
  && rm -f ./pandoc-3.1.9-1-amd64.deb \
  && apt-get install -y \
	     doxygen \
	     texlive-xetex fonts-sil-charis texlive-binaries texlive-fonts-extra \
  && pip install poxy \
  && apt-get install -y \
	     xvfb twm ffmpeg \
  && apt-get autoremove -y \
  && apt-get clean

# Install recent clang++
RUN : \
  && curl -fsSLO https://apt.llvm.org/llvm.sh && chmod +x llvm.sh \
  && yes | ./llvm.sh 17 && rm -f ./llvm.sh \
  && apt-get install -y clang-tidy-17 libclang-17-dev \
  && update-alternatives \
       --install /usr/bin/clang         clang           /usr/bin/clang-17 0 \
       --slave   /usr/bin/clang++       clang++         /usr/bin/clang++-17  \
       --slave   /usr/bin/clang-tidy    clang-tidy      /usr/bin/clang-tidy-17 \
  && apt-get clean

# Build recent castxml
RUN : \
  && cd /tmp \
  && git clone https://github.com/CastXML/CastXML.git \
  && export CC=clang CXX=clang++ \
  && cd CastXML && cmake . && make -j`nproc` && sudo make install \
  && cd /tmp && rm -rf CastXML

# Nodejs - https://github.com/nodesource/distributions#nodejs
RUN : \
  && mkdir -p /etc/apt/keyrings \
  && curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg \
  && rm -f nodesource-repo.gpg.key \
  && echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list \
  && apt-get update \
  && apt-get install -y nodejs \
  && apt-get clean

# Provide a fast JS package manager
RUN npm install -g bun@latest

# Build stripped down Fluidsynth version without drivers (not needed atm)
RUN exit 0 && \
  mkdir -p /tmp/fluid/build && cd /tmp/fluid/ && \
  curl -sfSOL https://github.com/FluidSynth/fluidsynth/archive/v2.2.1.tar.gz && \
  tar xf v2.2.1.tar.gz && rm v2.2.1.tar.gz && cd build && \
  cmake ../fluidsynth-2.2.1 \
	-DCMAKE_INSTALL_PREFIX=/usr/ \
	-DLIB_SUFFIX="/`dpkg-architecture -qDEB_HOST_MULTIARCH`" \
	-Denable-libsndfile=1 \
	-Denable-dbus=0 \
	-Denable-ipv6=0 \
	-Denable-jack=0 \
	-Denable-midishare=0 \
	-Denable-network=0 \
	-Denable-oss=0 \
	-Denable-pulseaudio=0 \
	-Denable-readline=0 \
	-Denable-alsa=0 \
	-Denable-lash=0 && \
  make && make install \
  && apt-get clean

# Become non-root
RUN groupadd --gid 1000 ubuntu \
  && useradd --uid 1000 --gid 1000 --create-home --shell /bin/bash ubuntu \
  && echo "ubuntu ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/ubuntu
USER ubuntu

ENV PATH /home/ubuntu/.local/bin:$PATH
RUN pip3 install --user meson

# docker build -t focal:latest -f misc/Dockerfile.focal misc
# docker run -ti --rm -v $PWD:/anklang -w /anklang focal:latest
